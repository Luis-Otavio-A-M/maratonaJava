package maratona.classesUtilitarias.nio.teste;

import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class PathTeste3 {
	public static void main(String[] args) {
		/*
		 * Neste ponto, onde possuimos dois caminhos que se completam, como poderiamos uni-los
		 * para chegarmos ao arquivo final.
		 */
		Path caminhoDir = Paths.get("home/user");
		Path caminhoArquivo = Paths.get("dev/arquivo.txt");
		Path caminhoFinal1 = Paths.get(caminhoDir.toString(), caminhoArquivo.toString());
		System.out.println(caminhoFinal1); //Podemos fazer assim, ou podemos utilizar o resolve, que pelo que entendi, concatena os caminhos
		
		Path caminhoFinal2 = caminhoDir.resolve(caminhoArquivo);
		System.out.println(caminhoFinal2);
		
		/*
		 * Características da normalização:
		 */
		
		/*
		 * Caminho absoluto é representado pelo primeiro caracter ser o '\',
		 * No caso caminho absoluto é aquele que será utilizado independente
		 * da pasta em que a ação foi executada, ou seja, a ação é feita da raiz
		 * em diante.
		 */
		Path caminhoAbsoluto = Paths.get("/home/user/dev");
		if(Files.exists(caminhoAbsoluto)) {
			System.out.println("Existe");
		}
		
	}
}
